import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import make_pipeline

# Sample dataset
data = {
    "Text": [
        "I love this movie!", 
        "This is the worst experience ever.", 
        "It was okay, nothing special.", 
        "Absolutely amazing service!", 
        "I hate waiting in long queues!"
    ],
    "Sentiment": ["Positive", "Negative", "Neutral", "Positive", "Negative"]
}

df = pd.DataFrame(data)

# Convert labels into numeric values
df['Sentiment'] = df['Sentiment'].map({"Positive": 1, "Negative": 0, "Neutral": 2})

# Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(df['Text'], df['Sentiment'], test_size=0.2, random_state=42)

# Create a text processing and classification pipeline
model = make_pipeline(CountVectorizer(), MultinomialNB())

# Train the model
model.fit(X_train, y_train)

# Predict on test data
sample_text = ["I absolutely love this!", "This is terrible!", "The service was okay."]
predictions = model.predict(sample_text)

# Print results
for text, sentiment in zip(sample_text, predictions):
    print(f"Text: {text} -> Sentiment: {['Negative', 'Positive', 'Neutral'][sentiment]}")
